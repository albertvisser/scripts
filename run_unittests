#! /usr/bin/env python3
"""script to run unittests using my "covtest" script

configurable through a .rurc file in the directory it's run from
for now it is assumed that this is the directory the files to test are located
"""
# TODO maybe a pause mode for between tests?
import sys
import os
import subprocess
# import shutil
import configparser

args = sys.argv[1:]
stopfirst = True if '-x' in args else False
if stopfirst:
    args.pop(args.index('-x'))

project = ''
if '-p' in args:
    which = args.index('-p')
    args.pop(which)
    project = args.pop(which)
    if project in ('scripts', 'bin'):
        project_path = '~/bin'
    elif project in ('server-stuff', 'nginx-config'):
        project_path = '~/nginx-config'
    elif project == 'lintergui':
        project_path = '~/projects/mylinter'
    else:
        project_path = f'~/projects/{project}'
    os.chdir(os.path.expanduser(project_path))

if not os.path.exists('.rurc'):
    sys.exit("No configuration file (.rurc) found,"
             " either go into a project's directory or specify one using -p")
conf = configparser.ConfigParser(allow_no_value=True)
conf.read('.rurc')
testdir = list(dict(conf['testdir']).keys())[0]
tests = dict(conf['testscripts'])
modules = dict(conf['testees'])

do, do_s = '', []
if args:
    do_s = args[0].split(',')
else:
    do = 'all'
ok = False
for parm in tests:
    if (do_s and parm in do_s) or do == 'all':
        ok = True
        if stopfirst:
            command = ['covtest', '-x', os.path.join(testdir, tests[parm]), modules[parm]]
        else:
            command = ['covtest', os.path.join(testdir, tests[parm]), modules[parm]]
        subprocess.run(command, check=False)

if not ok:
    if not project:
        project = os.path.basename(os.getcwd())
    print(f'usage: ./unittests [-p PROJ] [ARG] - where for PROJ {project}'
          f' ARG is a value from {list(tests)}')
